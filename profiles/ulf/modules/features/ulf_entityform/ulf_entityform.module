<?php
/**
 * @file
 * Code for the Ulf entityform feature.
 */

include_once 'ulf_entityform.features.inc';


function _ulf_entityform_add_node_reference_submit(&$form, &$form_state) {
  if(isset($form['field_message_parent_node'])) {
    $form_state['values']['field_message_parent_node'][LANGUAGE_NONE][0]['target_id'] = $form['#parent_nid'];
  }
  if(isset($form['field_message_parent_node_nomail'])) {
    $form_state['values']['field_message_parent_node_nomail'][LANGUAGE_NONE][0]['target_id'] = $form['#parent_nid'];
  }
}

/**
 * Implements hook_secure_permissions().
 */
function ulf_entityform_secure_permissions($role)
{
  $permissions = [];

  if(variable_get('ulf_entityform_enable_editor_forms', false)) {
    if($role == 'editor') {
      $permissions = [
        'administer entityform types',
        'view any entityform',
        'edit any entityform',
        'delete any entityform',
        'administer fields',
      ];
    }
  }

  return $permissions;
}

/**
 * Implements hook_form_alter().
 */
function ulf_entityform_form_alter(&$form, &$form_state, $form_id)
{
  if(strpos($form_id, '_entityform_edit_form') > 0) {
    if(isset($form['field_message_parent_node']) || isset($form['field_message_parent_node_nomail'])) {
      if(isset($form['field_message_parent_node'])) {
        $form['field_message_parent_node']['#access'] = FALSE;
      }
      if(isset($form['field_message_parent_node_nomail'])) {
        $form['field_message_parent_node_nomail']['#access'] = FALSE;
      }
      if (!empty(arg(0)) && arg(0) == 'node') {
        $form['#parent_nid'] = arg(1);
      }
      if (isset($form['actions']['submit'])) {
        array_unshift($form['actions']['submit']['#submit'], '_ulf_entityform_add_node_reference_submit');
      }
    }
    if(isset($form['field_message_recipient_mail'])) {
      $form['field_message_recipient_mail']['#access'] = FALSE;
    }
    if(isset($form['field_message_recipient_provider'])) {
      $form['field_message_recipient_provider']['#access'] = FALSE;
    }
  }

  if(variable_get('ulf_entityform_enable_editor_forms', false)) {
    $form_ids = [
      'course_node_form',
      'course_educators_node_form',
      'internship_node_form',
      'education_node_form'
    ];
    if(in_array($form_id, $form_ids)) {

      $node = $form_state['node'];

      $available_form_types = [];
      foreach (entityform_get_types() as $entityform_type) {
        if(isset($entityform_type->data['course_contact_form']['is_course_contact_form']) && $entityform_type->data['course_contact_form']['is_course_contact_form'] == 1) {
          if(isset($entityform_type->data['course_contact_form']['providers'])) {
            $providers = array_filter($entityform_type->data['course_contact_form']['providers']);
          } else {
            $providers = true;
          }
          $available_form_types[$entityform_type->id] = $providers ? $providers : true;
        }
      }

      $form['author']['name']['#ajax'] = [
        'callback' => 'dynamically_change_field_message_form_options',
        'wrapper' => 'field-message-form-wrapper',
        'method' => 'replace',
        'effect' => 'fade',
      ];

      $form['field_message_form'][LANGUAGE_NONE]['#prefix'] = '<div id="field-message-form-wrapper">';
      $form['field_message_form'][LANGUAGE_NONE]['#suffix'] = '</div>';

      if(isset($form_state['values'])) {
        //ajax request
        $user = user_load_by_name($form_state['values']['name']);
        if($user) {
          $provider = $user->uid;
        } else {
          $provider = 0;
        }
      } else {
        $provider = $node->uid;
      }
      $message_form_options = $form['field_message_form'][LANGUAGE_NONE]['#options'];
      foreach ($message_form_options as $key => $value) {
        if($key == '_none') {
          continue;
        }
        if(isset($available_form_types[$key])) {
          if(is_array($available_form_types[$key]) && !in_array($provider, $available_form_types[$key])) {
            unset($message_form_options[$key]);
          }
        } else {
          unset($message_form_options[$key]);
        }
      }

      $form['field_message_form'][LANGUAGE_NONE]['#options'] = $message_form_options;
      if(count($message_form_options) <= 1) {
        $form['field_message_form'][LANGUAGE_NONE]['#description'] = t('No available forms for this provider');
      }
    }
  }
}
function dynamically_change_field_message_form_options($form, $form_state) {
  return $form['field_message_form'];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ulf_entityform_form_entityform_type_form_alter(&$form, &$form_state)
{
  if(variable_get('ulf_entityform_enable_editor_forms', false)) {
    $entityform_type = $form['#entityform_type'];

    $form['data']['course_contact_form'] = array(
      '#type' => 'fieldset',
      '#title' => t('Course contact form'),
      '#collapsible' => TRUE,
      '#weight' => 20,
    );
    $form['data']['course_contact_form']['is_course_contact_form'] = array(
      '#type' => 'checkbox',
      '#title' => t('This form can be used as a course contact form'),
      '#default_value' => empty($entityform_type->data['course_contact_form']['is_course_contact_form']) ? 0 : $entityform_type->data['course_contact_form']['is_course_contact_form'],
    );

    $query = db_select('users', 'u');
    $query->fields('u', ['uid']);
    $query->fields('n', ['field_profile_name_value']);
    $query->leftJoin('users_roles', 'ur', 'u.uid = ur.uid');
    $query->leftJoin('role', 'r', 'ur.rid = r.rid');
    $query->leftJoin('field_data_field_profile_name', 'n', 'u.uid = n.entity_id');
    $query->condition('r.name', ['company', 'course provider'], 'IN');
    $query->condition('n.entity_type', 'user', '=');
    $result = $query->execute()->fetchAllKeyed(0, 1);

    $form['data']['course_contact_form']['providers'] = array(
      '#type' => 'select',
      '#title' => t('Only available to specific providers'),
      '#multiple' => true,
      '#options' => $result,
      '#default_value' => empty($entityform_type->data['course_contact_form']['providers']) ? [] : $entityform_type->data['course_contact_form']['providers'],
      '#description' => t('If none is selected, it will be available to all providers'),
      '#states' => [
        'invisible' => [
          ':input[name="data[course_contact_form][is_course_contact_form]"]' => ['checked' => false],
        ],
      ],
    );
    $form['data']['course_contact_form']['info'] = [
      '#type' => 'container',
      'content' => [
        '#markup' => '
          <h3>Information about form message notifications</h3>
          <p>You have the following options automatically integrated:</p>
          <ul>
          <li><b>Automatic recipient based on the course provider of the current page:</b> You have to add the form field "field_message_parent_node" to the form, in order to have the message automatically sent to the course provider</li>
          <li><b>You choose a specific provider:</b> You have to add the form fields "field_message_recipient_provider" and "field_message_parent_node_nomail" to the form, in order to have the message automatically sent to your chosen provider</li>
          <li><b>You submit a specific email address:</b> You have to add the form fields "field_message_recipient_mail" and "field_message_parent_node_nomail" to the form, in order to have the message automatically sent to your submitted email address</li>
          </ul>
          <p>Be aware, that if none of the above criteria have been met, no notification will be sent, unless you set it up yourself</p>
        ',
      ],
      '#states' => [
        'invisible' => [
          ':input[name="data[course_contact_form][is_course_contact_form]"]' => ['checked' => false],
        ],
      ],
    ];
  }
}

/**
 *
 */
function ulf_entityform_default_entityform_type_alter(&$entityform_types)
{
  if(variable_get('ulf_entityform_enable_editor_forms', false)) {
    if(isset($entityform_types['end_user_message'])) {
      $entityform_types['end_user_message']->data['course_contact_form']['is_course_contact_form'] = 1;
    }
  }
}

/**
 * Implements hook_field_default_field_bases_alter().
 */
function ulf_entityform_field_default_field_bases_alter(&$fields)
{
  if(variable_get('ulf_entityform_enable_editor_forms', false)) {
    // Exported field_base: 'field_message_parent_node_nomail'.
    $fields['field_message_parent_node_nomail'] = array(
      'active' => 1,
      'cardinality' => 1,
      'deleted' => 0,
      'entity_types' => array(),
      'field_name' => 'field_message_parent_node_nomail',
      'indexes' => array(
        'target_id' => array(
          0 => 'target_id',
        ),
      ),
      'locked' => 0,
      'module' => 'entityreference',
      'settings' => array(
        'handler' => 'base',
        'handler_settings' => array(
          'behaviors' => array(
            'views-select-list' => array(
              'status' => 0,
            ),
          ),
          'sort' => array(
            'type' => 'none',
          ),
          'target_bundles' => array(),
        ),
        'target_type' => 'node',
      ),
      'translatable' => 0,
      'type' => 'entityreference',
    );

    // Exported field_base: 'field_message_recipient_mail'.
    $fields['field_message_recipient_mail'] = array(
      'active' => 1,
      'cardinality' => 1,
      'deleted' => 0,
      'entity_types' => array(),
      'field_name' => 'field_message_recipient_mail',
      'indexes' => array(
        'format' => array(
          0 => 'format',
        ),
      ),
      'locked' => 0,
      'module' => 'text',
      'settings' => array(
        'max_length' => 255,
      ),
      'translatable' => 0,
      'type' => 'text',
    );

    // Exported field_base: 'field_message_recipient_provider'.
    $fields['field_message_recipient_provider'] = array(
      'active' => 1,
      'cardinality' => 1,
      'deleted' => 0,
      'entity_types' => array(),
      'field_name' => 'field_message_recipient_provider',
      'indexes' => array(
        'target_id' => array(
          0 => 'target_id',
        ),
      ),
      'locked' => 0,
      'module' => 'entityreference',
      'settings' => array(
        'handler' => 'base',
        'handler_settings' => array(
          'behaviors' => array(
            'views-select-list' => array(
              'status' => 0,
            ),
          ),
          'sort' => array(
            'direction' => 'ASC',
            'property' => 'name',
            'type' => 'property',
          ),
          'target_bundles' => array(),
        ),
        'target_type' => 'user',
      ),
      'translatable' => 0,
      'type' => 'entityreference',
    );
  }
}

/**
 * Implements hook_default_rules_configuration_alter().
 */
function ulf_entityform_default_rules_configuration_alter(&$configs)
{
  if(variable_get('ulf_entityform_enable_editor_forms', false)) {
    $configs['ulf_entityform_send_email_on_end_user_message_email'] = entity_import('rules_config', '{ "ulf_entityform_send_email_on_end_user_message_email" : {
        "LABEL" : "Send email on end user message to specific email address",
        "PLUGIN" : "reaction rule",
        "OWNER" : "rules",
        "TAGS" : [ "Message" ],
        "REQUIRES" : [ "rules", "mimemail", "entityform" ],
        "ON" : { "entityform_insert" : [] },
        "IF" : [
          { "entity_has_field" : { "entity" : [ "entityform" ], "field" : "field_message_recipient_mail" } },
          { "entity_has_field" : {
              "entity" : [ "entityform" ],
              "field" : "field_message_parent_node_nomail"
            }
          }
        ],
        "DO" : [
          { "entity_fetch" : {
              "USING" : {
                "type" : "node",
                "id" : [ "entityform:field-message-parent-node-nomail:nid" ]
              },
              "PROVIDE" : { "entity_fetched" : { "parent_node" : "Parent node" } }
            }
          },
          { "mimemail" : {
              "USING" : {
                "key" : "Send email on end user message",
                "to" : "[entityform:field-message-recipient-mail]",
                "from_name" : "[entityform:field-message-name]",
                "from_mail" : "[site:mail]",
                "reply_to" : "[entityform:field-message-email]",
                "subject" : "Henvendelse ang. [parent-node:title] fra [entityform:field-message-name]",
                "body" : "Henvendelse ang. [parent-node:title] ([parent-node:url]) fra [entityform:field-message-name]\\r\\n\\r\\n---\\r\\n\\u003Cstrong\\u003EFra:\\u003C\\/strong\\u003E [entityform:field-message-name]\\r\\n\\u003Cstrong\\u003EEmail:\\u003C\\/strong\\u003E [entityform:field-message-email]\\r\\n\\u003Cstrong\\u003E[parent-node:title]\\u003C\\/strong\\u003E\\r\\n\\u003Cstrong\\u003EBesked:\\u003C\\/strong\\u003E\\r\\n[entityform:field-message-body]\\r\\n\\r\\n---\\r\\n\\r\\nMed venlig hilsen\\r\\n[site:name]",
                "language" : [ "" ]
              },
              "PROVIDE" : { "send_status" : { "send_status" : "Send status" } }
            }
          }
        ]
      }
    }');
    $configs['ulf_entityform_send_email_on_end_user_message_provider'] = entity_import('rules_config', '{ "ulf_entityform_send_email_on_end_user_message_provider" : {
        "LABEL" : "Send email on end user message to specific provider",
        "PLUGIN" : "reaction rule",
        "OWNER" : "rules",
        "TAGS" : [ "Message" ],
        "REQUIRES" : [ "rules", "mimemail", "entityform" ],
        "ON" : { "entityform_insert" : [] },
        "IF" : [
          { "entity_has_field" : {
              "entity" : [ "entityform" ],
              "field" : "field_message_recipient_provider"
            }
          },
          { "entity_has_field" : {
              "entity" : [ "entityform" ],
              "field" : "field_message_parent_node_nomail"
            }
          }
        ],
        "DO" : [
          { "entity_fetch" : {
              "USING" : {
                "type" : "user",
                "id" : [ "entityform:field-message-recipient-provider:uid" ]
              },
              "PROVIDE" : { "entity_fetched" : { "message_recipient_provider" : "Message recipient provider" } }
            }
          },
          { "entity_fetch" : {
              "USING" : {
                "type" : "node",
                "id" : [ "entityform:field-message-parent-node-nomail:nid" ]
              },
              "PROVIDE" : { "entity_fetched" : { "parent_node" : "Parent node" } }
            }
          },
          { "mimemail" : {
              "USING" : {
                "key" : "Send email on end user message",
                "to" : "[message-recipient-provider:field-profile-mail]",
                "from_name" : "[entityform:field-message-name]",
                "from_mail" : "[site:mail]",
                "reply_to" : "[entityform:field-message-email]",
                "subject" : "Henvendelse ang. [parent-node:title] fra [entityform:field-message-name]",
                "body" : "Henvendelse ang. [parent-node:title] ([parent-node:url]) fra [entityform:field-message-name]\\r\\n\\r\\n---\\r\\n\\u003Cstrong\\u003EFra:\\u003C\\/strong\\u003E [entityform:field-message-name]\\r\\n\\u003Cstrong\\u003EEmail:\\u003C\\/strong\\u003E [entityform:field-message-email]\\r\\n\\u003Cstrong\\u003E[parent-node:title]\\u003C\\/strong\\u003E\\r\\n\\u003Cstrong\\u003EBesked:\\u003C\\/strong\\u003E\\r\\n[entityform:field-message-body]\\r\\n\\r\\n---\\r\\n\\r\\nMed venlig hilsen\\r\\n[site:name]",
                "language" : [ "" ]
              },
              "PROVIDE" : { "send_status" : { "send_status" : "Send status" } }
            }
          }
        ]
      }
    }');

  }
}
