<?php
/**
 * Implements hook_menu().
 *
 * @return array
 */
function ulf_admin_panel_menu () {
  $items = array();
  $site_name = variable_get('site_name', '');
  $items['admin/settings/custom'] = array(
    'title' => $site_name . ' administration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_ulf_admin_panel_form'),
    'access arguments' => array('access administration pages'),
    'description' => t('Ulf specific site settings')
  );

  $items['admin/settings/custom/custom'] = array(
    'title' => 'Default settings',
    'description' => 'Find and manage people interacting with your site.',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  return $items;
}

/**
 * Custom form setting af base for the admin panel.
 *
 * @param $form
 * @return mixed
 */
function _ulf_admin_panel_form($form) {
  $form['ulf_admin_panel'] = array(
    '#type' => 'vertical_tabs',
    '#default_tab' => 'ulf_email_settings',
    '#weight' => 1,
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['ulf_email_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Email settings'),
    '#weight' => 0,
    '#collapsible' => TRUE,
    '#group' => 'ulf_admin_panel',
  );

  $form['ulf_email_settings']['email_site_from'] = array(
      '#title' => t('Email [FROM:]'),
      '#type' => 'emailfield',
      '#default_value' => variable_get('email_site_from', ''),
      '#description' => t('Email used as the default FROM: address when this site sends emails.')
  );

  $form['ulf_email_settings']['email_workflow_recipient'] = array(
    '#title' => t('Email admin notifications recipient'),
    '#type' => 'emailfield',
    '#default_value' => variable_get('email_workflow_recipient', ''),
    '#description' => t('The email address used to receive admin notifications when content changes. This should be an email address accessible to editors in the daily workflow.'),
  );

  $form['images'] = array(
    '#type' => 'fieldset',
    '#title' => t('Images'),
    '#weight' => 1,
    '#collapsible' => TRUE,
    '#group' => 'ulf_admin_panel',
  );

  // Image fields
  $form['images']['ulf_newsletter_header_image'] = array(
    '#title' => t('Newsletter header image'),
    '#type' => 'managed_file',
    '#description' => t('Best format 1000x320. The uploaded image will be displayed on the page ') . '<a href="/newsletter/archive">/newsletter/archive</a>',
    '#default_value' => variable_get('ulf_newsletter_header_image', ''),
    '#upload_location' => 'public://',
  );

  // Trash can
  $form['trash_can'] = array(
    '#type' => 'fieldset',
    '#title' => t('Trash can'),
    '#weight' => 1,
    '#collapsible' => TRUE,
    '#group' => 'ulf_admin_panel',
  );

  $form['trash_can']['trash_can_delete_timer'] = array(
    '#type' => 'numberfield',
    '#title' => t('Trash delete timer'),
    '#default_value' => variable_get('trash_can_delete_timer', '365'),
    '#size' => 60,
    '#maxlength' => 128,
    '#description' => t('The duration in days that content must stay untouched in trash before being deleted from the system.'),
  );

  // Better field descriptions
  $form['better_field_descriptions'] = array(
    '#type' => 'fieldset',
    '#title' => t('Better field descriptions'),
    '#weight' => 10,
    '#collapsible' => TRUE,
    '#group' => 'ulf_admin_panel',
  );

  $form['better_field_descriptions']['link'] = array(
    '#markup' => t('Edit the descriptions here: <a href="@link">@link</a>', ['@link' => '/admin/config/content/better_field_descriptions/bundles']),
  );

  // Custom submit.
  $form['#submit'] = array('_ulf_admin_panel_form_submit');

  return system_settings_form($form);
}

/**
 * Custom submit handler for admin panel form to store the an image file properly.
 * @param $form
 * @param $form_state
 */
function _ulf_admin_panel_form_submit($form, $form_state) {
  if(!empty($form_state['values']['ulf_newsletter_header_image'])) {
    // Load the file via file.fid.
    $file = file_load($form_state['values']['ulf_newsletter_header_image']);
    // Change status to permanent.
    $file->status = FILE_STATUS_PERMANENT;
    // Save.
    file_save($file);
    // Record that the module (in this example, user module) is using the file.
    file_usage_add($file, 'user', 'user', 1);
  }

  if(!empty($form_state['values']['email_site_from'])) {
    variable_set('mimemail_mail', $form_state['values']['email_site_from']);
    variable_set('site_mail', $form_state['values']['email_site_from']);
  }
}

/**
 * Permission for accessing admin panel.
 *
 * @return array
 */
function ulf_admin_panel_permission() {
  return array(
    'administer custom settings' => array(
      'title' => t('Administer customized settings'),
      'description' => t('Access administration tasks for customized settings.'),
    ),
  );
}

/**
 * Implements hook_form_FORMID_alter().
 *
 * Disable email settings form item.
 */
function ulf_admin_panel_form_mimemail_admin_settings_alter(&$form, $form_state) {
  $form['mimemail']['mimemail_mail']['#attributes']['readonly'] = 'readonly';
  $form['mimemail']['mimemail_mail']['#attributes']['style'] = 'background:#efefef;';
  $form['mimemail']['mimemail_mail']['#description'] .= '<p><strong>! ' . t('This setting should be modified in the admin panel module. See site administration') . ' !</strong></p>';
}

/**
 * Implements hook_form_FORMID_alter().
 *
 * Disable email settings form item.
 */
function ulf_admin_panel_form_system_site_information_settings_alter(&$form, $form_state) {
  $form['site_information']['site_mail']['#attributes']['readonly'] = 'readonly';
  $form['site_information']['site_mail']['#attributes']['style'] = 'background:#efefef;';
  $form['site_information']['site_mail']['#description'] .= '<p><strong>! ' . t('This setting should be modified in the admin panel module. See site administration') . ' !</strong></p>';
}
