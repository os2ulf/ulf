<?php
/**
 * @file
 * Used to modify different forms on the site.
 */

/**
 * Implements hook_form_alter().
 *
 * Modify forms
 */
function ulf_forms_form_alter(&$form, &$form_state, $form_id) {
  $form['#attached']['js'] = array();
  $form['#attached']['js'][] = drupal_get_path('module', 'ulf_forms') . '/js/node-form-logics.js';
  $form['#attached']['js'][] = drupal_get_path('module', 'ulf_forms') . '/js/jquery.imagesloaded.js';
  $form['#attached']['js'][] = drupal_get_path('module', 'ulf_forms') . '/js/jquery.imgareaselect.dev.js';

  switch ($form_id) {

  // Course node form.
  case 'course_node_form':

    $form['#attached']['js'][] = drupal_get_path('module', 'ulf_forms') . '/js/node-form-logics.js';

    // User messages.

    // Assist on node add.
    if (empty($form['nid']['#value'])) {
      $message_required = '<p>' . t('Required fields are marked with a star and can be found in the "Practical information" field group.') . '</p>';
      drupal_set_message($message_required);
    }

    // Assist on lacking image.
    if ($form_state['field']['field_image'][LANGUAGE_NONE]['items_count'] == 0) {
      $message_image = '<p>' . t('You will need to add an image to your course, before the content can be published.') . '</p>';
      drupal_set_message($message_image);
    }

    // Latest moderation log.
    if (!empty($form['vid']['#value'])) {
      $latest_log_message = t('Latest message') . ': ' . ulf_forms_fetch_moderation_log_latest($form['vid']['#value']);
      drupal_set_message($latest_log_message);
    }

    $form['#prefix'] = '<div class="node--form is-default-form">';
    $form['#suffix'] = '</div>';
    break;

  // Course educators node form.
  case 'course_educators_node_form':
    $form['#prefix'] = '<div class="node--form is-default-form">';
    $form['#suffix'] = '</div>';
    break;

  // User anonymous forms (Login, request pass and create account)
  case 'user_pass':
    $form['#prefix'] = '<div class="form-module--user-login">';
    $form['#suffix'] = '</div>';
    $form['actions']['submit']['#attributes']['class'][] = 'form-module--user-submit';
    break;

  case 'user_register_form':
    $form['#prefix'] = '<div class="form-module--user-login">';
    $form['#suffix'] = '</div>';
    $form['actions']['submit']['#attributes']['class'][] = 'form-module--user-submit';
    break;

  case 'user_login':
    $form['#prefix'] = '<div class="form-module--user-login">';
    $form['#suffix'] = '</div>';
    $form['actions']['submit']['#attributes']['class'][] = 'form-module--user-submit';
    break;
  }
}

/**
 * Implements hook_wysiwyg_editor_settings_alter().
 *
 * Set wysiwyg textarea height.
 */
function ulf_forms_wysiwyg_editor_settings_alter(&$settings, $context) {
  if($context['profile']->editor == 'ckeditor') {
    $settings['height'] = 200;
  }
}

/**
 * Fetch the latest moderation log.
 */
function ulf_forms_fetch_moderation_log_latest($vid) {
  $result = db_select('node_revision', 'n')
    ->fields('n', array('log'))
    ->condition('vid', $vid,'=')
    ->execute()
    ->fetchAssoc();
  return $result['log'];
}